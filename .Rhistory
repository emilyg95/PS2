}
getwd()
setwd("/Users/emilygarner/Documents/School/Second Sem/R/Problem Sets/PS2")
sink.benfords(1:9, 3)
print.benfords(1:9, 3)
sink(file = "Print_Benfords_2.csv", append = F, split = F)
print.benfords(1:9, 3)
sink()
sink.benfords = sink(file = "Print_Benfords_2.csv", append = F, split = F)
?function
)
sink(file = "Print_Benfords_3.csv", append = F, split = F)
print.benfords(1:9, 2)
sink()
print.benfords = function(x, control){
digit = substr(x, 1, 1)
freq = table(digit)
m = freq/sum(freq)
for (i in 1:9){
Leemis = as.data.frame(max(m - log10(1+1/i)))
ChoVec = (m - log10(1+1/i))^2
Cho_Gains = as.data.frame(sqrt(sum(ChoVec)))
colnames(Cho_Gains) = c("Cho_Gains")
colnames(Leemis) = c("Leemis")
if (max(Leemis) <= 0.851){
print.noquote("Leemis: cannot reject the null")
}else if (0.967 >= max(Leemis) & max(Leemis) > 0.851){
print.noquote("Leemis: *")
}else if (1.212 >= max(Leemis) & max(Leemis) > 0.967){
print.noquote("Leemis: **")
}else{
print.noquote("Leemis: ***")
}
if ((Cho_Gains) <= 1.212){
print.noquote("Cho Gains: cannot reject the null")
}else if (1.330 >= (Cho_Gains) & (Cho_Gains) > 1.212){
print.noquote("Cho Gains: *")
}else if (1.569 >= (Cho_Gains) & (Cho_Gains) > 1.330){
print.noquote("Cho Gains: **")
}else{
print.noquote("Cho Gains: ***")
}
if (control == 1){
print.noquote("Significance Levels; a = 0.1*, a = 0.05**, a = 0.01***")
return(Leemis)
}else if (control == 2){
print.noquote("Significance Levels; a = 0.1*, a = 0.05**, a = 0.01***")
return(Cho_Gains)
}else{
print.noquote("Significance Levels; a = 0.1*, a = 0.05**, a = 0.01***")
return(c(Leemis, Cho_Gains))
}
}
}
print.benfords(1:9, 3)
print.benfords(1:9, 3)
))
print.benfords = function(x, control){
digit = substr(x, 1, 1)
freq = table(digit)
m = freq/sum(freq)
for (i in 1:9){
Leemis = as.data.frame(max(m - log10(1+1/i)))
ChoVec = (m - log10(1+1/i))^2
Cho_Gains = as.data.frame(sqrt(sum(ChoVec)))
colnames(Cho_Gains) = c("Cho_Gains")
colnames(Leemis) = c("Leemis")
if (max(Leemis) <= 0.851){
print.noquote("Leemis: cannot reject the null")
}else if (0.967 >= max(Leemis) & max(Leemis) > 0.851){
print.noquote("Leemis: *")
}else if (1.212 >= max(Leemis) & max(Leemis) > 0.967){
print.noquote("Leemis: **")
}else{
print.noquote("Leemis: ***")
}
if ((Cho_Gains) <= 1.212){
print.noquote("Cho Gains: cannot reject the null")
}else if (1.330 >= (Cho_Gains) & (Cho_Gains) > 1.212){
print.noquote("Cho Gains: *")
}else if (1.569 >= (Cho_Gains) & (Cho_Gains) > 1.330){
print.noquote("Cho Gains: **")
}else{
print.noquote("Cho Gains: ***")
}
if (control == 1){
print.noquote("Significance Levels; a = 0.1*, a = 0.05**, a = 0.01***")
return(Leemis)
}else if (control == 2){
print.noquote("Significance Levels; a = 0.1*, a = 0.05**, a = 0.01***")
return(Cho_Gains)
}else{
print.noquote("Significance Levels; a = 0.1*, a = 0.05**, a = 0.01***")
return(c(Leemis, Cho_Gains))
}
}
}
print.benfords(1:9, 3)
print.benfords = function(x, control){
digit = substr(x, 1, 1)
freq = table(digit)
m = freq/sum(freq)
for (i in 1:9){
Leemis = as.data.frame(max(m - log10(1+1/i)))
ChoVec = (m - log10(1+1/i))^2
Cho_Gains = as.data.frame(sqrt(sum(ChoVec)))
colnames(Cho_Gains) = c("Cho_Gains")
colnames(Leemis) = c("Leemis")
if (max(Leemis) <= 0.851){
print.noquote("Leemis: cannot reject the null")
}else if (0.967 >= max(Leemis) & max(Leemis) > 0.851){
print.noquote("Leemis: *")
}else if (1.212 >= max(Leemis) & max(Leemis) > 0.967){
print.noquote("Leemis: **")
}else{
print.noquote("Leemis: ***")
}
if ((Cho_Gains) <= 1.212){
print.noquote("Cho Gains: cannot reject the null")
}else if (1.330 >= (Cho_Gains) & (Cho_Gains) > 1.212){
print.noquote("Cho Gains: *")
}else if (1.569 >= (Cho_Gains) & (Cho_Gains) > 1.330){
print.noquote("Cho Gains: **")
}else{
print.noquote("Cho Gains: ***")
}
if (control == 1){
print.noquote("Significance Levels; a = 0.1*, a = 0.05**, a = 0.01***")
return(Leemis)
}else if (control == 2){
print.noquote("Significance Levels; a = 0.1*, a = 0.05**, a = 0.01***")
return(Cho_Gains)
}else{
print.noquote("Significance Levels; a = 0.1*, a = 0.05**, a = 0.01***")
return(c(Leemis, Cho_Gains))
}
}
}
print.benfords(1:9, 3)
print.benfords = function(x, control){
digit = substr(x, 1, 1)
freq = table(digit)
m = freq/sum(freq)
for (i in 1:9){
Leemis = as.data.frame(max(m - log10(1+1/i)))
ChoVec = (m - log10(1+1/i))^2
Cho_Gains = as.data.frame(sqrt(sum(ChoVec)))
colnames(Cho_Gains) = c("Cho_Gains")
colnames(Leemis) = c("Leemis")
if (max(Leemis) <= 0.851){
print.noquote("Leemis: cannot reject the null")
}else if (0.967 >= max(Leemis) & max(Leemis) > 0.851){
print.noquote("Leemis: *")
}else if (1.212 >= max(Leemis) & max(Leemis) > 0.967){
print.noquote("Leemis: **")
}else{
print.noquote("Leemis: ***")
}
if ((control == 3|2) & (Cho_Gains) <= 1.212){
print.noquote("Cho Gains: cannot reject the null")
}else if (1.330 >= (Cho_Gains) & (Cho_Gains) > 1.212){
print.noquote("Cho Gains: *")
}else if (1.569 >= (Cho_Gains) & (Cho_Gains) > 1.330){
print.noquote("Cho Gains: **")
}else{
print.noquote("Cho Gains: ***")
}
if (control == 1){
print.noquote("Significance Levels; a = 0.1*, a = 0.05**, a = 0.01***")
return(Leemis)
}else if (control == 2){
print.noquote("Significance Levels; a = 0.1*, a = 0.05**, a = 0.01***")
return(Cho_Gains)
}else{
print.noquote("Significance Levels; a = 0.1*, a = 0.05**, a = 0.01***")
return(c(Leemis, Cho_Gains))
}
}
}
print.benfords(1:9, 3)
print.benfords(1:9, 1)
print.benfords = function(x, control){
digit = substr(x, 1, 1)
freq = table(digit)
m = freq/sum(freq)
for (i in 1:9){
Leemis = as.data.frame(max(m - log10(1+1/i)))
ChoVec = (m - log10(1+1/i))^2
Cho_Gains = as.data.frame(sqrt(sum(ChoVec)))
colnames(Cho_Gains) = c("Cho_Gains")
colnames(Leemis) = c("Leemis")
if (max(Leemis) <= 0.851){
print.noquote("Leemis: cannot reject the null")
}else if (0.967 >= max(Leemis) & max(Leemis) > 0.851){
print.noquote("Leemis: *")
}else if (1.212 >= max(Leemis) & max(Leemis) > 0.967){
print.noquote("Leemis: **")
}else{
print.noquote("Leemis: ***")
}
if ((Cho_Gains) <= 1.212){
print.noquote("Cho Gains: cannot reject the null")
}else if (1.330 >= (Cho_Gains) & (Cho_Gains) > 1.212){
print.noquote("Cho Gains: *")
}else if (1.569 >= (Cho_Gains) & (Cho_Gains) > 1.330){
print.noquote("Cho Gains: **")
}else{
print.noquote("Cho Gains: ***")
}
if (control == 1){
print.noquote("Significance Levels; a = 0.1*, a = 0.05**, a = 0.01***")
return(Leemis)
}else if (control == 2){
print.noquote("Significance Levels; a = 0.1*, a = 0.05**, a = 0.01***")
return(Cho_Gains)
}else{
print.noquote("Significance Levels; a = 0.1*, a = 0.05**, a = 0.01***")
return(c(Leemis, Cho_Gains))
}
}
}
print.benfords(1:9, 1)
sink.benfords = function(x, control){
sink(file = "Print_Benfords.csv", append = F, split = F)
print.benfords(x, control)
sink()
}
sink.benfords(1:9, 3)
sink.benfords = function(x, control){
sink(file = "Print_Benfords.csv", append = F, split = F)
print.benfords = function(x, control){
digit = substr(x, 1, 1)
freq = table(digit)
m = freq/sum(freq)
for (i in 1:9){
Leemis = as.data.frame(max(m - log10(1+1/i)))
ChoVec = (m - log10(1+1/i))^2
Cho_Gains = as.data.frame(sqrt(sum(ChoVec)))
colnames(Cho_Gains) = c("Cho_Gains")
colnames(Leemis) = c("Leemis")
if (max(Leemis) <= 0.851){
print.noquote("Leemis: cannot reject the null")
}else if (0.967 >= max(Leemis) & max(Leemis) > 0.851){
print.noquote("Leemis: *")
}else if (1.212 >= max(Leemis) & max(Leemis) > 0.967){
print.noquote("Leemis: **")
}else{
print.noquote("Leemis: ***")
}
if ((Cho_Gains) <= 1.212){
print.noquote("Cho Gains: cannot reject the null")
}else if (1.330 >= (Cho_Gains) & (Cho_Gains) > 1.212){
print.noquote("Cho Gains: *")
}else if (1.569 >= (Cho_Gains) & (Cho_Gains) > 1.330){
print.noquote("Cho Gains: **")
}else{
print.noquote("Cho Gains: ***")
}
if (control == 1){
print.noquote("Significance Levels; a = 0.1*, a = 0.05**, a = 0.01***")
return(Leemis)
}else if (control == 2){
print.noquote("Significance Levels; a = 0.1*, a = 0.05**, a = 0.01***")
return(Cho_Gains)
}else{
print.noquote("Significance Levels; a = 0.1*, a = 0.05**, a = 0.01***")
return(c(Leemis, Cho_Gains))
}
}
}
sink()
}
sink.benfords(1:9, 3)
print.benfords = function(x, control){
digit = substr(x, 1, 1)
freq = table(digit)
m = freq/sum(freq)
for (i in 1:9){
Leemis = as.data.frame(max(m - log10(1+1/i)))
ChoVec = (m - log10(1+1/i))^2
Cho_Gains = as.data.frame(sqrt(sum(ChoVec)))
colnames(Cho_Gains) = c("Cho_Gains")
colnames(Leemis) = c("Leemis")
if (max(Leemis) <= 0.851){
print.noquote("Leemis: cannot reject the null")
}else if (0.967 >= max(Leemis) & max(Leemis) > 0.851){
print.noquote("Leemis: *")
}else if (1.212 >= max(Leemis) & max(Leemis) > 0.967){
print.noquote("Leemis: **")
}else{
print.noquote("Leemis: ***")
}
if ((Cho_Gains) <= 1.212){
print.noquote("Cho Gains: cannot reject the null")
}else if (1.330 >= (Cho_Gains) & (Cho_Gains) > 1.212){
print.noquote("Cho Gains: *")
}else if (1.569 >= (Cho_Gains) & (Cho_Gains) > 1.330){
print.noquote("Cho Gains: **")
}else{
print.noquote("Cho Gains: ***")
}
if (control == 1){
print.noquote("Significance Levels; a = 0.1*, a = 0.05**, a = 0.01***")
return(Leemis)
}else if (control == 2){
print.noquote("Significance Levels; a = 0.1*, a = 0.05**, a = 0.01***")
return(Cho_Gains)
}else{
print.noquote("Significance Levels; a = 0.1*, a = 0.05**, a = 0.01***")
return(c(Leemis, Cho_Gains))
}
}
}
print.benfords(1:9, 1)
sink.benfords(1:9, 1)
sink.benfords(1:9, 1)
sink.benfords = function(x, control){
sink(file = "Print_Benfords.csv", append = F, split = F)
print.benfords(x, control)
sink()
}
sink.benfords(1:9, 1)
sink.benfords = function(x, control){
sink(file = "Print_Benfords.csv", append = F, split = F)
unlist(print.benfords(x, control))
sink()
}
sink.benfords(1:9, 1)
sink.benfords = function(x, control){
sink(file = "Print_Benfords.csv", append = F, split = F)
as.data.frame(print.benfords(x, control))
sink()
}
sink.benfords(1:9, 1)
sink.benfords = function(x, control){
sink(file = "Print_Benfords.csv", append = F, split = F)
table(print.benfords(x, control))
sink()
}
sink.benfords(1:9, 1)
table(print.benfords(1:9, 3))
unlist(print.benfords(1:9, 3))
print.benfords = function(x, control){
digit = substr(x, 1, 1)
freq = table(digit)
m = freq/sum(freq)
for (i in 1:9){
Leemis = as.data.frame(max(m - log10(1+1/i)))
ChoVec = (m - log10(1+1/i))^2
Cho_Gains = as.data.frame(sqrt(sum(ChoVec)))
colnames(Cho_Gains) = c("Cho_Gains")
colnames(Leemis) = c("Leemis")
if (max(Leemis) <= 0.851){
print.noquote("Leemis: cannot reject the null")
}else if (0.967 >= max(Leemis) & max(Leemis) > 0.851){
print.noquote("Leemis: *")
}else if (1.212 >= max(Leemis) & max(Leemis) > 0.967){
print.noquote("Leemis: **")
}else{
print.noquote("Leemis: ***")
}
if ((Cho_Gains) <= 1.212){
print.noquote("Cho Gains: cannot reject the null")
}else if (1.330 >= (Cho_Gains) & (Cho_Gains) > 1.212){
print.noquote("Cho Gains: *")
}else if (1.569 >= (Cho_Gains) & (Cho_Gains) > 1.330){
print.noquote("Cho Gains: **")
}else{
print.noquote("Cho Gains: ***")
}
if (control == 1){
print.noquote("Significance Levels; a = 0.1*, a = 0.05**, a = 0.01***")
print(return(Leemis))
}else if (control == 2){
print.noquote("Significance Levels; a = 0.1*, a = 0.05**, a = 0.01***")
print(return(Cho_Gains))
}else{
print.noquote("Significance Levels; a = 0.1*, a = 0.05**, a = 0.01***")
print(return(c(Leemis, Cho_Gains)))
}
}
}
print.benfords(1:9, 1)
sink.benfords = function(x, control){
sink(file = "Print_Benfords.csv", append = F, split = F)
print.benfords(x, control)
sink()
}
sink.benfords(1:9, 1)
sink.benfords = function(x, control){
sink(file = "Print_Benfords.csv", append = F, split = F)
print.benfords(x, control)
sink()
}
sink.benfords(1:9, 1)
sink.benfords = function(x, control){
sink(file = "Print_Benfords.csv", append = F, split = F)
table(print.benfords(x, control))
sink()
}
sink.benfords(1:9, 1)
sink.benfords = function(x, control){
sink(file = "Print_Benfords.csv", append = F, split = F)
unlist(print.benfords(x, control))
sink()
}
sink.benfords(1:9, 1)
as.matrix(print.benfords(1:9, 1))
sink.benfords = function(x, control){
sink(file = "Print_Benfords.csv", append = F, split = F)
as.matrix(print.benfords(x, control))
sink()
}
sink.benfords(1:9, 1)
sink.benfords = function(x, control){
sink(file = "Print_Benfords.csv", append = F, split = F)
as.matrix(print.benfords(x, control))
sink()
}
sink.benfords(1:9, 1)
as.matrix(print.benfords(1:9, 1))
View(print.benfords(1:9, 1))
View(as.matrix(print.benfords(1:9, 1)))
View(unlist(print.benfords(1:9, 1)))
View(unlist(print.benfords(1:9, 3)))
unlist(print.benfords(1:9, 3))
print.benfords(1:9, 3)
csv.benfords = function(x, control){
write.csv(print.benfords, "Print_Benfords.csv")
}
csv.benfords(print.benfords(1:9, 3))
csv.benfords = function(x, control){
write.csv(as.date.frame(print.benfords), "Print_Benfords.csv")
}
csv.benfords(print.benfords(1:9, 3))
csv.benfords = function(x, control){
write.csv(print.benfords), "Print_Benfords.csv")
}
csv.benfords = function(x, control){
write.csv(print.benfords, "Print_Benfords.csv")
}
csv.benfords(print.benfords(1:9, 3))
csv.benfords = function(x, control){
write.table(print.benfords, "Print_Benfords.csv")
}
csv.benfords(print.benfords(1:9, 3))
csv.benfords = function(x, control){
write.table(as.data.frame(print.benfords), "Print_Benfords.csv")
}
csv.benfords(print.benfords(1:9, 3))
csv.benfords = function(x, control){
write.table(unlist(print.benfords), "Print_Benfords.csv")
}
csv.benfords(print.benfords(1:9, 3))
dataframe.benfords = function(x, control){
as.data.frame(print.benfords)
}
dataframe.benfords(print.benfords(1:9, 3))
dataframe.benfords = function(x, control){
as.data.frame(unlist(print.benfords))
}
dataframe.benfords(print.benfords(1:9, 3))
dataframe.benfords = function(x, control){
as.data.frame(table(print.benfords))
}
dataframe.benfords(print.benfords(1:9, 3))
as.vector(print.benfords(1:9, 3))
as.data.frame(as.vector(print.benfords))
dataframe.benfords = function(x, control){
as.data.frame(as.vector(print.benfords))
}
dataframe.benfords(print.benfords(1:9, 3))
dataframe.benfords = function(x, control){
as.data.frame(as.vector(table(print.benfords)))
}
dataframe.benfords(print.benfords(1:9, 3))
dataframe.benfords = function(x, control){
as.data.frame(table(as.vector(print.benfords)))
}
dataframe.benfords(print.benfords(1:9, 3))
dataframe.benfords(print.benfords(1:9, 3))
as.vector(print.benfords(1:9, 3))
sink.benfords = function(x, control){
sink(file = "Print_Benfords.csv", append = F, split = F)
as.vector(print.benfords(x, control))
sink()
}
sink.benfords(1:9, 3)
export.benfords = function(x, control){
export(print.benfords(x, control), "Export_Benfords.csv")
}
export.benfords(1:9, 3)
library("datasets")
export.benfords = function(x, control){
export(print.benfords(x, control), "Export_Benfords.csv")
}
export.benfords(1:9, 3)
library("datasets")
export.benfords = function(x, control){
export(print.benfords(x, control), "Export_Benfords.csv")
}
export.benfords(1:9, 3)
library("rio")
install.packages("datasets")
install.packages("datasets")
install.packages("datasets")
install.packages("datasets")
library("datasets")
export.benfords = function(x, control){
export(print.benfords(x, control), "Export_Benfords.csv")
}
export.benfords(1:9, 3)
