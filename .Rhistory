print.noquote("Cho Gains: *")
}else if (1.569 >= (Cho_Gains) & (Cho_Gains) > 1.330){
print.noquote("Cho Gains: **")
}else{
print.noquote("Cho Gains: ***")
}
if (control == 1){
return(Leemis)
}else if (control == 2){
return(Cho_Gains)
}else{
print.noquote("Significance Levels; a = 0.1*, a = 0.05**, a = 0.01***")
return(c(Leemis, Cho_Gains))
}
}
}
print.benfords(1:9, 3)
print.benfords = function(x, control){
digit = substr(x, 1, 1)
freq = table(digit)
m = freq/sum(freq)
for (i in 1:9){
Leemis = as.data.frame(max(m - log10(1+1/i)))
ChoVec = (m - log10(1+1/i))^2
Cho_Gains = as.data.frame(sqrt(sum(ChoVec)))
}
Stars_L = symnum(Leemis, cutpoints = c(0, 0.851,  0.967, 1.212, 100), corr = F,
symbols = c(" ","*","**","***"))
Signif_L = cbind(Leemis, Stars_L)
Stars_C = symnum(Cho_Gains, cutpoints = c(0, 1.212,  1.330, 1.569, 100), corr = F,
symbols = c(" ","*","**","***"))
Signif_C = cbind(Cho_Gains, Stars_C)
if (control == 1){
return(Signif_L)
}
if (control == 2){
return(Signif_C)
}
else{
return(c(Signif_L,Signif_C))
}
}
print.benfords(1:9, 3)
print.benfords = function(x, control){
digit = substr(x, 1, 1)
freq = table(digit)
m = freq/sum(freq)
for (i in 1:9){
Leemis = max(m - log10(1+1/i))
ChoVec = (m - log10(1+1/i))^2
Cho_Gains = sqrt(sum(ChoVec))
}
Stars_L = symnum(Leemis, cutpoints = c(0, 0.851,  0.967, 1.212, 100), corr = F,
symbols = c(" ","*","**","***"))
Signif_L = cbind(Leemis, Stars_L)
Stars_C = symnum(Cho_Gains, cutpoints = c(0, 1.212,  1.330, 1.569, 100), corr = F,
symbols = c(" ","*","**","***"))
Signif_C = cbind(Cho_Gains, Stars_C)
if (control == 1){
return(Signif_L)
}
if (control == 2){
return(Signif_C)
}
else{
return(c(Signif_L,Signif_C))
}
}
print.benfords(1:9, 3)
Benford = function(x, control){
digit = substr(x, 1, 1)
freq = table(digit)
m = freq/sum(freq)
for (i in 1:9){
Leemis = m - log10(1+1/i)
ChoVec = (m - log10(1+1/i))^2
Cho_Gains = sqrt(sum(ChoVec))
}
if (control == 1){
return(Leemis)
}
if (control == 2){
return(Cho_Gains)
}
else{
return(c(Leemis,Cho_Gains))
}
}
Benford(1:9, 1)
Benford = function(x, control){
digit = substr(x, 1, 1)
freq = table(digit)
m = freq/sum(freq)
for (i in 1:9){
Leemis = max(m - log10(1+1/i))
ChoVec = (m - log10(1+1/i))^2
Cho_Gains = sqrt(sum(ChoVec))
}
if (control == 1){
return(Leemis)
}
if (control == 2){
return(Cho_Gains)
}
else{
return(c(Leemis,Cho_Gains))
}
}
Benford(1:9, 1)
print.benfords = function(x, control){
digit = substr(x, 1, 1)
freq = table(digit)
m = freq/sum(freq)
for (i in 1:9){
Leemis = max(m - log10(1+1/i))
ChoVec = (m - log10(1+1/i))^2
Cho_Gains = sqrt(sum(ChoVec))
}
Stars_L = symnum(Leemis, cutpoints = c(0, 0.851,  0.967, 1.212, 100), corr = F,
symbols = c("cannot reject null","*","**","***"))
Signif_L = cbind(Leemis, Stars_L)
Stars_C = symnum(Cho_Gains, cutpoints = c(0, 1.212,  1.330, 1.569, 100), corr = F,
symbols = c("cannot reject null","*","**","***"))
Signif_C = cbind(Cho_Gains, Stars_C)
if (control == 1){
return(Signif_L)
}
if (control == 2){
return(Signif_C)
}
else{
return(c(Signif_L,Signif_C))
}
}
print.benfords(1:9, 3)
print.benfords = function(x, control){
digit = substr(x, 1, 1)
freq = table(digit)
m = freq/sum(freq)
for (i in 1:9){
Leemis = max(m - log10(1+1/i))
ChoVec = (m - log10(1+1/i))^2
Cho_Gains = sqrt(sum(ChoVec))
}
Stars_L = symnum(Leemis, cutpoints = c(0, 0.851,  0.967, 1.212, 100), corr = F,
symbols = c("cannot reject null","*","**","***"))
Signif_L = cbind("Leemis", Leemis, Stars_L)
Stars_C = symnum(Cho_Gains, cutpoints = c(0, 1.212,  1.330, 1.569, 100), corr = F,
symbols = c("cannot reject null","*","**","***"))
Signif_C = cbind("Cho Gains", Cho_Gains, Stars_C)
if (control == 1){
return(Signif_L)
}
if (control == 2){
return(Signif_C)
}
else{
return(c(Signif_L,Signif_C))
}
}
print.benfords(1:9, 3)
print.benfords = function(x, control){
digit = substr(x, 1, 1)
freq = table(digit)
m = freq/sum(freq)
for (i in 1:9){
Leemis = as.data.frame(max(m - log10(1+1/i)))
ChoVec = (m - log10(1+1/i))^2
Cho_Gains = as.data.frame(sqrt(sum(ChoVec)))
colnames(Cho_Gains) = c("Cho_Gains")
colnames(Leemis) = c("Leemis")
if (max(Leemis) <= 0.851){
print.noquote("Leemis: cannot reject the null")
}else if (0.967 >= max(Leemis) & max(Leemis) > 0.851){
print.noquote("Leemis: *")
}else if (1.212 >= max(Leemis) & max(Leemis) > 0.967){
print.noquote("Leemis: **")
}else{
print.noquote("Leemis: ***")
}
if ((Cho_Gains) <= 1.212){
print.noquote("Cho Gains: cannot reject the null")
}else if (1.330 >= (Cho_Gains) & (Cho_Gains) > 1.212){
print.noquote("Cho Gains: *")
}else if (1.569 >= (Cho_Gains) & (Cho_Gains) > 1.330){
print.noquote("Cho Gains: **")
}else{
print.noquote("Cho Gains: ***")
}
if (control == 1){
return(Leemis)
}else if (control == 2){
return(Cho_Gains)
}else{
print.noquote("Significance Levels; a = 0.1*, a = 0.05**, a = 0.01***")
return(c(Leemis, Cho_Gains))
}
}
}
print.benfords(1:9, 3)
?sink
sink.benfords = sink(file = "Print_Benfords.csv")
sink.benfords
sink.benfords = function(x){
sink(file = "Print_Benfords.csv")
print.benfords(x)
sink()
}
sink.benfords(x)
sink.benfords = function(x, 3){
sink(file = "Print_Benfords.csv")
print.benfords(x)
sink()
}
sink.benfords(x, 3)
sink.benfords = function(x, n){
sink(file = "Print_Benfords.csv")
print.benfords(x, 3)
sink()
}
sink.benfords(x, 3)
print.benfords(1:9, 3)
print.benfords(1:9, 3)
close()
print.benfords(1:9, 3)
print.benfords = function(x, control){
digit = substr(x, 1, 1)
freq = table(digit)
m = freq/sum(freq)
for (i in 1:9){
Leemis = as.data.frame(max(m - log10(1+1/i)))
ChoVec = (m - log10(1+1/i))^2
Cho_Gains = as.data.frame(sqrt(sum(ChoVec)))
colnames(Cho_Gains) = c("Cho_Gains")
colnames(Leemis) = c("Leemis")
if (max(Leemis) <= 0.851){
print.noquote("Leemis: cannot reject the null")
}else if (0.967 >= max(Leemis) & max(Leemis) > 0.851){
print.noquote("Leemis: *")
}else if (1.212 >= max(Leemis) & max(Leemis) > 0.967){
print.noquote("Leemis: **")
}else{
print.noquote("Leemis: ***")
}
if ((Cho_Gains) <= 1.212){
print.noquote("Cho Gains: cannot reject the null")
}else if (1.330 >= (Cho_Gains) & (Cho_Gains) > 1.212){
print.noquote("Cho Gains: *")
}else if (1.569 >= (Cho_Gains) & (Cho_Gains) > 1.330){
print.noquote("Cho Gains: **")
}else{
print.noquote("Cho Gains: ***")
}
if (control == 1){
return(Leemis)
}else if (control == 2){
return(Cho_Gains)
}else{
print.noquote("Significance Levels; a = 0.1*, a = 0.05**, a = 0.01***")
return(c(Leemis, Cho_Gains))
}
}
}
print.benfords(1:9, 3)$Leemis
sink.benfords = function(x, n){
sink(file = "Print_Benfords.csv")
print.benfords(x, 3)
sink()
}
sink.benfords(1:9, 3)
sink.benfords = function(x, n){
sink(file = "Print_Benfords.csv")
print.benfords(x, 3)
sink()
}
sink.benfords(1:9, 3)
x <- 1:9
print.benfords(x, 3)
sink.benfords = function(x, n){
sink(file = "Print_Benfords.csv")
print.benfords(x, 3)
print.benfords(x, 3)$Leemis
print.benfords(x, 3)$Cho_Gains
sink()
}
sink.benfords(1:9, 3)
print.benfords(x, 3)$Leemis
print.benfords(x, 3)$Cho_Gains
sink.benfords = function(x, n){
sink(file = "Print_Benfords.csv")
print.benfords(x, 3)
print.benfords(x, 3)$Leemis
print.benfords(x, 3)$Cho_Gains
sink()
}
sink.benfords(1:9, 3)
print.benfords(x, 3)$Leemis
print.benfords(x, 3)$Cho_Gains
print.benfords(x, 1)
sink.benfords = function(x, n){
sink(file = "Print_Benfords.csv")
print.benfords(x, 1)
print.benfords(x, 2)
sink()
}
sink.benfords(1:9, 3)
sink.benfords = function(x){
sink(file = "Print_Benfords.csv")
print.benfords(x, 1)
print.benfords(x, 2)
sink()
}
sink.benfords(1:9)
print.benfords(x, 1)
print.benfords(x, 2)
View(print.benfords)
print.benfords = function(x, control){
digit = substr(x, 1, 1)
freq = table(digit)
m = freq/sum(freq)
for (i in 1:9){
Leemis = as.data.frame(max(m - log10(1+1/i)))
ChoVec = (m - log10(1+1/i))^2
Cho_Gains = as.data.frame(sqrt(sum(ChoVec)))
colnames(Cho_Gains) = c("Cho_Gains")
colnames(Leemis) = c("Leemis")
if (max(Leemis) <= 0.851){
print.noquote("Leemis: cannot reject the null")
}else if (0.967 >= max(Leemis) & max(Leemis) > 0.851){
print.noquote("Leemis: *")
}else if (1.212 >= max(Leemis) & max(Leemis) > 0.967){
print.noquote("Leemis: **")
}else{
print.noquote("Leemis: ***")
}
if ((Cho_Gains) <= 1.212){
print.noquote("Cho Gains: cannot reject the null")
}else if (1.330 >= (Cho_Gains) & (Cho_Gains) > 1.212){
print.noquote("Cho Gains: *")
}else if (1.569 >= (Cho_Gains) & (Cho_Gains) > 1.330){
print.noquote("Cho Gains: **")
}else{
print.noquote("Cho Gains: ***")
}
if (control == 1){
print(Leemis)
}else if (control == 2){
print(Cho_Gains)
}else{
print.noquote("Significance Levels; a = 0.1*, a = 0.05**, a = 0.01***")
print(c(Leemis, Cho_Gains))
}
}
}
print.benfords(1:9, 3)$Leemis
print.benfords = function(x, control){
digit = substr(x, 1, 1)
freq = table(digit)
m = freq/sum(freq)
for (i in 1:9){
Leemis = as.data.frame(max(m - log10(1+1/i)))
ChoVec = (m - log10(1+1/i))^2
Cho_Gains = as.data.frame(sqrt(sum(ChoVec)))
colnames(Cho_Gains) = c("Cho_Gains")
colnames(Leemis) = c("Leemis")
if (max(Leemis) <= 0.851){
print.noquote("Leemis: cannot reject the null")
}else if (0.967 >= max(Leemis) & max(Leemis) > 0.851){
print.noquote("Leemis: *")
}else if (1.212 >= max(Leemis) & max(Leemis) > 0.967){
print.noquote("Leemis: **")
}else{
print.noquote("Leemis: ***")
}
if ((Cho_Gains) <= 1.212){
print.noquote("Cho Gains: cannot reject the null")
}else if (1.330 >= (Cho_Gains) & (Cho_Gains) > 1.212){
print.noquote("Cho Gains: *")
}else if (1.569 >= (Cho_Gains) & (Cho_Gains) > 1.330){
print.noquote("Cho Gains: **")
}else{
print.noquote("Cho Gains: ***")
}
if (control == 1){
print(Leemis)
}else if (control == 2){
print(Cho_Gains)
}else{
print.noquote("Significance Levels; a = 0.1*, a = 0.05**, a = 0.01***")
print(Leemis, Cho_Gains)
}
}
}
print.benfords(1:9, 3)$Leemis
print.benfords(1:9, 3)
sink.benfords = function(x){
sink(file = "Print_Benfords.csv")
print.benfords(x, 1)
print.benfords(x, 2)
sink()
}
sink.benfords(1:9)
print.benfords = function(x, control){
digit = substr(x, 1, 1)
freq = table(digit)
m = freq/sum(freq)
for (i in 1:9){
Leemis = as.data.frame(max(m - log10(1+1/i)))
ChoVec = (m - log10(1+1/i))^2
Cho_Gains = as.data.frame(sqrt(sum(ChoVec)))
colnames(Cho_Gains) = c("Cho_Gains")
colnames(Leemis) = c("Leemis")
if (max(Leemis) <= 0.851){
print.noquote("Leemis: cannot reject the null")
}else if (0.967 >= max(Leemis) & max(Leemis) > 0.851){
print.noquote("Leemis: *")
}else if (1.212 >= max(Leemis) & max(Leemis) > 0.967){
print.noquote("Leemis: **")
}else{
print.noquote("Leemis: ***")
}
if ((Cho_Gains) <= 1.212){
print.noquote("Cho Gains: cannot reject the null")
}else if (1.330 >= (Cho_Gains) & (Cho_Gains) > 1.212){
print.noquote("Cho Gains: *")
}else if (1.569 >= (Cho_Gains) & (Cho_Gains) > 1.330){
print.noquote("Cho Gains: **")
}else{
print.noquote("Cho Gains: ***")
}
if (control == 1){
return(Leemis)
}else if (control == 2){
return(Cho_Gains)
}else{
print.noquote("Significance Levels; a = 0.1*, a = 0.05**, a = 0.01***")
return(c(Leemis, Cho_Gains))
}
}
}
sink.benfords = function(x){
sink(file = "Print_Benfords.csv")
print.benfords(x, 1)
print.benfords(x, 2)
sink()
}
sink.benfords(1:9)
print.benfords(x, 1)
sink.benfords = function(x){
sink(file = "Print_Benfords.csv")
print.benfords(x, 1)
print.benfords(x, 2)
sink()
}
sink.benfords(1:9)
print.benfords(1:9, 3)
print.benfords(1:9, 3)$Leemis
sink.benfords = function(x){
sink(file = "Print_Benfords.csv")
print.benfords(1:9, 3)$Leemis
print.benfords(1:9, 3)$Cho_Gains
sink()
}
sink.benfords(1:9)
print.benfords(1:9, 3)$Leemis
sink.benfords = function(x){
sink(file = "Print_Benfords.csv")
print.benfords(1:9, 3)$Leemis
sink()
}
sink.benfords(1:9)
print.benfords(1:9, 3)$Leemis
sink.benfords = function(x){
sink(file = "Print_Benfords.csv", append=TRUE, split=FALSE)
print.benfords(1:9, 3)$Leemis
sink()
}
sink.benfords(1:9)
print.benfords(1:9, 3)$Leemis
sink.benfords = function(x){
sink(file = "Print_Benfords.csv")
print.benfords(1:9, 3)$Leemis
sink()
}
sink.benfords(1:9)
sink.benfords = function(x){
sink(file = "Print_Benfords.csv")
print.benfords(1:9, 3)
sink()
}
sink.benfords(1:9)
sink.benfords = function(x){
sink(file = "Print_Benfords.csv")
print.benfords(1:9, 3)
sink()
}
sink.benfords(1:9)
getwd()
setwd("/Users/emilygarner/Documents/School/Second Sem/R/Problem Sets/PS2")
sink.benfords = function(x){
sink(file = "Print_Benfords.csv")
print.benfords(1:9, 3)
sink()
}
sink.benfords(1:9)
print.benfords(1:9, 3)
sink.benfords = function(x){
sink(file = "Print_Benfords.csv")
print.benfords(1:9, 3)$Leemis
sink()
}
sink.benfords(1:9)
